name: User Service CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'monopoly/user-service/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'monopoly/user-service/**'

# Add permissions for the workflow
permissions:
  contents: write
  packages: write
  security-events: write

env:
  REGISTRY: docker.io
  IMAGE_NAME: jeffreyxu2025/monopoly-user-service

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: monopoly/user-service/package-lock.json

      - name: Install dependencies
        working-directory: monopoly/user-service
        run: npm ci

      - name: Run tests
        working-directory: monopoly/user-service
        run: npm test || echo "Tests not configured yet"

      - name: Security audit
        working-directory: monopoly/user-service
        run: npm audit --audit-level high || true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./monopoly/user-service
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Deploy to EKS
        run: |
          NEW_TAG="main-${{ github.sha }}"
          aws eks update-kubeconfig --region us-west-2 --name monopoly-dev-jxre
          kubectl set image deployment/user-service user-service=${{ env.IMAGE_NAME }}:${NEW_TAG} -n monopoly-game
          kubectl rollout status deployment/user-service -n monopoly-game --timeout=300s
