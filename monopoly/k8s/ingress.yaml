# Kubernetes Ingress - Uses Terraform-managed IAM roles but creates ALB dynamically
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monopoly-ingress
  namespace: monopoly-game
  annotations:
    # Use Terraform-managed ingress class
    kubernetes.io/ingress.class: alb
    
    # ALB Configuration
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    
    # Health checks
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    
    # Terraform-managed subnets (will be populated by deployment script)
    alb.ingress.kubernetes.io/subnets: "TERRAFORM_PUBLIC_SUBNETS"
    
    # Tags for cost tracking
    alb.ingress.kubernetes.io/tags: Environment=development,Project=monopoly-game,ManagedBy=kubernetes-ingress
spec:
  rules:
  - http:
      paths:
      # Frontend routes
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 3000
      # API routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: game-engine-service
            port:
              number: 3001
      # WebSocket routes
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: game-engine-service
            port:
              number: 3001
